---
  - name: Provision an EC2 Instance
    hosts: localhost
    connection: local
    gather_facts: False
    tags: provisioning

    vars:
      instance_type: t2.micro
      security_group: webservers
      image: ami-0080e4c5bc078760e
      region: us-east-1
      keypair: sshkeypair
      count: 1

    tasks:

         - name: Launch the new t2 micro EC2 Instance
        local_action: ec2
                      group={{ security_group }}
                      instance_type={{ instance_type}}
                      image={{ image }}
                      wait=true
                      region={{ region }}
                      keypair={{ keypair }}
                      count={{count}}
        register: ec2

      - name: Wait for EC2 Instance to Spin-up and ready for SSH access
        local_action: wait_for
                      host={{ item.public_ip }}
                      port=22
                      state=started
        with_items: "{{ ec2.instances }}"

      - name: Adding Tags to Identify
        local_action: ec2_tag resource={{ item.id }} region={{ region }} state=present
        with_items: "{{ ec2.instances }}"
        args:
          tags:
            Name: Web Server
            Owner: Ravi Kumar
            PurPose: Testing EC2 Instance From Ansible


----------------------------
- name: create ec2 instance
        ec2:
          aws_access_key: "AKIAIWJUADQPQB16LCFI"
          aws_secret_key: "NCMx885+nNU51sKuprQeZeVsU9arRZc7hAX7Itez"
          image: ami-caaf84af
          wait: yes
          instance_type: t2.micro
          group_id: security_group.group_id
          region: us-east-2
          count_tag:
            Name: apacheserver
          exact_count: 1
        register: ec2

--------------------
ansible-playbook site.yml
---
- name: Create a EC2 instance
  hosts: server1
  gather_facts: False

  vars:
      region: us-east-1
      instance_type: t2.micro
      ami: ami-f4cc1de2
      keypair: mykey # pem file name
  
  tasks:

    - name: Creating an EC2 instance
      ec2:
         key_name: "{{ keypair }}"
         group: default  # security group name
         instance_type: "{{ instance_type}}"
         image: "{{ ami }}"
         wait: true
         region: "{{ region }}"
         count: 1  # default
        register: ec2


 -------------------
 ---
- hosts: server1
  sudo: yes
  tasks:
    - name: install php
      apt: name=php7* update_cache=yes state=present


  tasks:
    - name: install apache2
      apt: name=apache2 update_cache=yes state=present


handlers:
    - name: start apache2
      service: name=apache2 state=start

handlers:
    - name: stop apache2
      service: name=apache2 state=stop

handlers:
    - name: restart apache2
      service: name=apache2 state=restarted

 ---------------------------------
 ---
- hosts: apache
  sudo: yes
  tasks:
    - name: install apache2
      apt: name=apache2 update_cache=yes state=latest
